package org.mal_lang.enterpriselang.test;

import core.Attacker;
import org.junit.jupiter.api.Test;

public class TestExploitationForCredentialAccess extends EnterpriseLangTest {

    private static class exploitationForCredentialAccess {
        public final UserAccount userAccount = new UserAccount("userAccount");
        public final Service service = new Service("service");
        public final OS os = new OS("os");
    }

    @Test
    public void userRights(){
        var model = new exploitationForCredentialAccess();

        Attacker attacker = new Attacker();
        attacker.addAttackPoint(model.userAccount.userRights);
        attacker.attack();

        model.userAccount.userRights.assertCompromisedInstantaneously();
    }

    @Test
    public void exploitationForCredentialAccess(){
        var model = new exploitationForCredentialAccess();

        Attacker attacker = new Attacker();
        attacker.addAttackPoint(model.service.exploitationForCredentialAccess);
        attacker.attack();

        model.service.attemptExploitationForCredentialAccess.assertCompromisedInstantaneously();
        model.service.exploitationForCredentialAccess.assertCompromisedInstantaneously();
        model.service.exploitationOfNTLMAuthentication.assertCompromisedInstantaneously();
        model.service.attemptExploitationForPrivilegeEscalation.assertCompromisedInstantaneously();
        model.service.attemptExploitationForPrivilegeEscalation.assertCompromisedInstantaneously();
        model.service.exploitationForPrivilegeEscalation.assertCompromisedInstantaneously();
    }

    @Test
    public void infectedOS(){
        var model = new exploitationForCredentialAccess();

        Attacker attacker = new Attacker();
        attacker.addAttackPoint(model.os.infectedOS);
        attacker.attack();

        model.os.executeCode.assertCompromisedInstantaneously();
    }
}